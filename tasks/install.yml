---
- name: "Check for tftp installation"
  ansible.builtin.stat:
    path: '{{ tftp_install_dir }}/tftp.py'
  changed_when: false
  register: tftp_install

- name: Install tasks
  when: not tftp_install.stat.exists or tftp_force_install | bool
  block:
    - name: "Install requierements"
      ansible.builtin.package:
        name: "libpq-dev"
        state: present

    - name: "Install pip package"
      ansible.builtin.pip:
        name:
          - requests
          - fbtftp
          - jinja2
          - psycopg2-binary
        state: present
        executable: pip3

    - name: "Ensure install directory exists"
      ansible.builtin.file:
        path: '{{ tftp_install_dir }}'
        state: directory
        mode: '0755'

    - name: "Copy tftp.py"
      ansible.builtin.copy:
        src: 'tftp.py'
        dest: '{{ tftp_install_dir }}/tftp.py'
        mode: '0755'

    - name: "Create systemd for tftp"
      ansible.builtin.template:
        src: tftp.service.j2
        dest: /etc/systemd/system/tftp.service
        mode: '0640'

    - name: "Start tftp.service"
      ansible.builtin.service:
        name: tftp
        state: started
        enabled: true
        daemon_reload: true

- name: Install simple http tasks
  when: tftp_simplehttp_install | bool or http_force_install | bool
  block:
    - name: "Copy simplehttp.py"
      ansible.builtin.template:
        src: 'simplehttp.py.j2'
        dest: '{{ tftp_install_dir }}/simplehttp.py'
        mode: '0755'

    - name: "Create systemd for simple http"
      ansible.builtin.template:
        src: http.service.j2
        dest: /etc/systemd/system/http.service
        mode: '0640'

    - name: "Start http.service"
      ansible.builtin.service:
        name: http
        state: started
        enabled: true
        daemon_reload: true

- name: "Check for source dir"
  ansible.builtin.stat:
    path: '{{ tftp_sources_dir }}'
  changed_when: false
  register: src_dir

- name: "Copy httproot files (ftp content)"
  ansible.builtin.copy:
    src: '{{ tftp_sources_dir }}'
    dest: '{{ tftp_root_dir }}'
    mode: '0644'
  when: src_dir.stat.exists
  notify:
    - "Restart tftp"
    - "Restart http"
